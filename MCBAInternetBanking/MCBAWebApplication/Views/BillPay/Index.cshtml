@using MCBABackend.Utilities
@model BillPayViewModel
@{
    ViewData["Title"] = "BillPay";
    List<string> accounts = (List<string>) @ViewBag.AccountList;
}
@{
    // Put in its own code block because the <> seemed to be confusing visual studio's error checking
    List<Payee> payees = (List<Payee>) @ViewBag.PayeeList;
}
@{
    List<BillPay> billPays = (List<BillPay>) @ViewBag.BillPayList;
}

<form method="post" asp-action="Confirm">
    <div class="form-group">
        <div class="form-group">
            @Html.McbaTextBox(model => model.Amount)
        </div>
        <div class="form-group">
            @Html.McbaDropDown(model => model.Account, new SelectList(accounts,"Select Account"), "From Account")
        </div>
        <div class="form-group">
            @* setting the value field for the html dropdown to Payee.PayeeId and the display value as Payee.Name*@
            @Html.McbaDropDown(model => model.Payee, new SelectList(payees, nameof(Payee.PayeeId), nameof(Payee.Name), "Select Payee"), "To Payee")
        </div>
        <div class="form-group">
            @Html.McbaDateTime(model => model.ScheduleTimeUtc)
        </div>
        <div class="form-group">
            @Html.McbaDropDown(model => model.Period, Html.GetEnumSelectList<Period>(), "Period")
        </div>
        <div class="form-group">
            <input type="submit" value="Schedule Pay" class="btn btn-primary"/>
        </div>
    </div>
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
</form>

@await Html.PartialAsync("_BillPayList", billPays)